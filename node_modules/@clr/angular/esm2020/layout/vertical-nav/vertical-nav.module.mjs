/*
 * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { angleDoubleIcon, angleIcon, ClarityIcons } from '@cds/core/icon';
import { ClrIconModule } from '../../icon/icon.module';
import { ClrConditionalModule } from '../../utils/conditional/conditional.module';
import { ClrFocusOnViewInitModule } from '../../utils/focus/focus-on-view-init/focus-on-view-init.module';
import { ClrVerticalNav } from './vertical-nav';
import { ClrVerticalNavGroup } from './vertical-nav-group';
import { ClrVerticalNavGroupChildren } from './vertical-nav-group-children';
import { ClrVerticalNavIcon } from './vertical-nav-icon';
import { ClrVerticalNavLink } from './vertical-nav-link';
import * as i0 from "@angular/core";
export const CLR_VERTICAL_NAV_DIRECTIVES = [
    ClrVerticalNav,
    ClrVerticalNavLink,
    ClrVerticalNavGroup,
    ClrVerticalNavGroupChildren,
    ClrVerticalNavIcon,
];
export class ClrVerticalNavModule {
    constructor() {
        ClarityIcons.addIcons(angleIcon, angleDoubleIcon);
    }
}
ClrVerticalNavModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: ClrVerticalNavModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ClrVerticalNavModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.2", ngImport: i0, type: ClrVerticalNavModule, declarations: [ClrVerticalNav,
        ClrVerticalNavLink,
        ClrVerticalNavGroup,
        ClrVerticalNavGroupChildren,
        ClrVerticalNavIcon], imports: [CommonModule, ClrIconModule, ClrConditionalModule, ClrFocusOnViewInitModule], exports: [ClrVerticalNav,
        ClrVerticalNavLink,
        ClrVerticalNavGroup,
        ClrVerticalNavGroupChildren,
        ClrVerticalNavIcon, ClrConditionalModule, ClrIconModule, ClrFocusOnViewInitModule] });
ClrVerticalNavModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: ClrVerticalNavModule, imports: [CommonModule, ClrIconModule, ClrConditionalModule, ClrFocusOnViewInitModule, ClrConditionalModule, ClrIconModule, ClrFocusOnViewInitModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: ClrVerticalNavModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ClrIconModule, ClrConditionalModule, ClrFocusOnViewInitModule],
                    declarations: [CLR_VERTICAL_NAV_DIRECTIVES],
                    exports: [CLR_VERTICAL_NAV_DIRECTIVES, ClrConditionalModule, ClrIconModule, ClrFocusOnViewInitModule],
                }]
        }], ctorParameters: function () { return []; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVydGljYWwtbmF2Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FuZ3VsYXIvc3JjL2xheW91dC92ZXJ0aWNhbC1uYXYvdmVydGljYWwtbmF2Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQVEsTUFBTSxlQUFlLENBQUM7QUFDL0MsT0FBTyxFQUFFLGVBQWUsRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFMUUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLGdFQUFnRSxDQUFDO0FBQzFHLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUMzRCxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUM1RSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN6RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQzs7QUFFekQsTUFBTSxDQUFDLE1BQU0sMkJBQTJCLEdBQWdCO0lBQ3RELGNBQWM7SUFDZCxrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLDJCQUEyQjtJQUMzQixrQkFBa0I7Q0FDbkIsQ0FBQztBQU9GLE1BQU0sT0FBTyxvQkFBb0I7SUFDL0I7UUFDRSxZQUFZLENBQUMsUUFBUSxDQUFDLFNBQVMsRUFBRSxlQUFlLENBQUMsQ0FBQztJQUNwRCxDQUFDOztpSEFIVSxvQkFBb0I7a0hBQXBCLG9CQUFvQixpQkFaL0IsY0FBYztRQUNkLGtCQUFrQjtRQUNsQixtQkFBbUI7UUFDbkIsMkJBQTJCO1FBQzNCLGtCQUFrQixhQUlSLFlBQVksRUFBRSxhQUFhLEVBQUUsb0JBQW9CLEVBQUUsd0JBQXdCLGFBUnJGLGNBQWM7UUFDZCxrQkFBa0I7UUFDbEIsbUJBQW1CO1FBQ25CLDJCQUEyQjtRQUMzQixrQkFBa0IsRUFNcUIsb0JBQW9CLEVBQUUsYUFBYSxFQUFFLHdCQUF3QjtrSEFFekYsb0JBQW9CLFlBSnJCLFlBQVksRUFBRSxhQUFhLEVBQUUsb0JBQW9CLEVBQUUsd0JBQXdCLEVBRTlDLG9CQUFvQixFQUFFLGFBQWEsRUFBRSx3QkFBd0I7MkZBRXpGLG9CQUFvQjtrQkFMaEMsUUFBUTttQkFBQztvQkFDUixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsYUFBYSxFQUFFLG9CQUFvQixFQUFFLHdCQUF3QixDQUFDO29CQUN0RixZQUFZLEVBQUUsQ0FBQywyQkFBMkIsQ0FBQztvQkFDM0MsT0FBTyxFQUFFLENBQUMsMkJBQTJCLEVBQUUsb0JBQW9CLEVBQUUsYUFBYSxFQUFFLHdCQUF3QixDQUFDO2lCQUN0RyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTYtMjAyMyBWTXdhcmUsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIFRoaXMgc29mdHdhcmUgaXMgcmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UuXG4gKiBUaGUgZnVsbCBsaWNlbnNlIGluZm9ybWF0aW9uIGNhbiBiZSBmb3VuZCBpbiBMSUNFTlNFIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHByb2plY3QuXG4gKi9cblxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nTW9kdWxlLCBUeXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBhbmdsZURvdWJsZUljb24sIGFuZ2xlSWNvbiwgQ2xhcml0eUljb25zIH0gZnJvbSAnQGNkcy9jb3JlL2ljb24nO1xuXG5pbXBvcnQgeyBDbHJJY29uTW9kdWxlIH0gZnJvbSAnLi4vLi4vaWNvbi9pY29uLm1vZHVsZSc7XG5pbXBvcnQgeyBDbHJDb25kaXRpb25hbE1vZHVsZSB9IGZyb20gJy4uLy4uL3V0aWxzL2NvbmRpdGlvbmFsL2NvbmRpdGlvbmFsLm1vZHVsZSc7XG5pbXBvcnQgeyBDbHJGb2N1c09uVmlld0luaXRNb2R1bGUgfSBmcm9tICcuLi8uLi91dGlscy9mb2N1cy9mb2N1cy1vbi12aWV3LWluaXQvZm9jdXMtb24tdmlldy1pbml0Lm1vZHVsZSc7XG5pbXBvcnQgeyBDbHJWZXJ0aWNhbE5hdiB9IGZyb20gJy4vdmVydGljYWwtbmF2JztcbmltcG9ydCB7IENsclZlcnRpY2FsTmF2R3JvdXAgfSBmcm9tICcuL3ZlcnRpY2FsLW5hdi1ncm91cCc7XG5pbXBvcnQgeyBDbHJWZXJ0aWNhbE5hdkdyb3VwQ2hpbGRyZW4gfSBmcm9tICcuL3ZlcnRpY2FsLW5hdi1ncm91cC1jaGlsZHJlbic7XG5pbXBvcnQgeyBDbHJWZXJ0aWNhbE5hdkljb24gfSBmcm9tICcuL3ZlcnRpY2FsLW5hdi1pY29uJztcbmltcG9ydCB7IENsclZlcnRpY2FsTmF2TGluayB9IGZyb20gJy4vdmVydGljYWwtbmF2LWxpbmsnO1xuXG5leHBvcnQgY29uc3QgQ0xSX1ZFUlRJQ0FMX05BVl9ESVJFQ1RJVkVTOiBUeXBlPGFueT5bXSA9IFtcbiAgQ2xyVmVydGljYWxOYXYsXG4gIENsclZlcnRpY2FsTmF2TGluayxcbiAgQ2xyVmVydGljYWxOYXZHcm91cCxcbiAgQ2xyVmVydGljYWxOYXZHcm91cENoaWxkcmVuLFxuICBDbHJWZXJ0aWNhbE5hdkljb24sXG5dO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBDbHJJY29uTW9kdWxlLCBDbHJDb25kaXRpb25hbE1vZHVsZSwgQ2xyRm9jdXNPblZpZXdJbml0TW9kdWxlXSxcbiAgZGVjbGFyYXRpb25zOiBbQ0xSX1ZFUlRJQ0FMX05BVl9ESVJFQ1RJVkVTXSxcbiAgZXhwb3J0czogW0NMUl9WRVJUSUNBTF9OQVZfRElSRUNUSVZFUywgQ2xyQ29uZGl0aW9uYWxNb2R1bGUsIENsckljb25Nb2R1bGUsIENsckZvY3VzT25WaWV3SW5pdE1vZHVsZV0sXG59KVxuZXhwb3J0IGNsYXNzIENsclZlcnRpY2FsTmF2TW9kdWxlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgQ2xhcml0eUljb25zLmFkZEljb25zKGFuZ2xlSWNvbiwgYW5nbGVEb3VibGVJY29uKTtcbiAgfVxufVxuIl19